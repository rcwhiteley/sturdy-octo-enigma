info:
  title: TeLleo API
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
swagger: '2.0'
securityDefinitions:
  keystone:
    description: OpenStack Keystone Authentication
    type: apiKey
    in: header
    name: x-auth-token
basePath: /api/v1
security: []

paths:
  /pasajeros/{pasajero}:
    get:
      tags:
        - pasajeros
      operationId: InformacionPasajero
      summary: Obtiene la informacion de un pasajero
      parameters:
        - $ref: '#/parameters/pasajeroParam'
        - $ref: '#/parameters/byNameParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/pasajeroDTO'
        '204':
          description: No se retornaron datos, es probable que no exista en la base de datos
      security:
        - keystone: []
  /pasajeros/{pasajero}/reservas:
    get:
      tags:
        - pasajeros
      operationId: ReservasPasajero
      summary: Obtiene todas las reservas que ha hecho el pasajero
      parameters:
        - $ref: '#/parameters/pasajeroUsernameParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/reservaDTO'
        '204':
          description: No se retornaron datos, es probable que no exista en la base de datos
      security:
        - keystone: []
  /pasajeros/{pasajero}/reservas/{reservaID}:
    delete:
      tags:
        - pasajeros
      operationId: DeleteReservaPasajero
      summary: Eliminia una reserva del pasajero
      parameters:
        - $ref: '#/parameters/pasajeroUsernameParam'
        - $ref: '#/parameters/reservaIdParam'
      responses:
        '200':
          description: OK, la reserva se borro correctamente
        '204':
          description: No se borraron datos
      security:
        - keystone: []
  /conductores/{conductor}:
    get:
      tags:
        - conductores
      operationId: InformacionConductor
      summary: Obtiene la informacion de un conductor
      parameters:
        - $ref: '#/parameters/conductorParam'
        - $ref: '#/parameters/byNameParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/conductorDTO'
        '204':
          description: No se retornaron datos, es probable que no exista en la base de datos
      security:
        - keystone: []
  /conductores/{conductor}/viajes:
    get:
      tags:
        - conductores
      operationId: listaViajesCreados
      summary: Obtiene una lista con los viajes creados por el conductor
      parameters:
        - $ref: '#/parameters/conductorUsernameParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/viajeDTO'
        '204':
          description: No se retornaron datos, es probable que no exista en la base de datos
      security:
        - keystone: []
  /viajes:
    get:
      tags:
        - viajes
      operationId: listaViajes
      summary: Obtine una lista con los viajes que pasan por dos ciudades entre un rango de fechas 
      parameters:
        - $ref: '#/parameters/ciudadOrigenParam'
        - $ref: '#/parameters/ciudadDestinoParam'
        - $ref: '#/parameters/fechaMinimaParam'
        - $ref: '#/parameters/fechaMaximaParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/viajeDTO'
        description: No se retornaron datos, es probable que no exista en la base de datos
        '400':
          description: Faltan parametros en la consulta o tienen el nombre equivocado
          schema:
            type: object
            properties:
              message:
                type: string
                descriptiom: Descripcion del error

      security:
        - keystone: []
  /viajes/{viajeID}:
    get:
      tags:
        - viajes
      operationId: InformacionViaje
      summary: Obtiene la informacion de un viaje
      parameters:
        - $ref: '#/parameters/viajeIdParam'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/viajeDTO'
        '204':
          description: No se retornaron datos, es probable que no exista en la base de datos
      security:
        - keystone: []
  /viajes/{viajeID}/pasajeros:
    get:
      tags:
        - viajes
      operationId: listaPasajerosEnViaje
      summary: Obtine una lista con los pasajeros confirmados para un viaje (por hacer, consultar entre paradas) 
      parameters:
        - $ref: '#/parameters/viajeIdParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/pasajeroDTO'
      security:
        - keystone: []
tags:
- name: conductores
  description: ruta /api/v1/conductores

- name: pasajeros
  description: ruta /api/v1/pasajeros

- name: viajes
  description: ruta /api/v1/viajes

parameters:
  reservaIdParam:
    name: reservaID
    in: path
    required: true
    description: id de la reserva que se desea borrar 
    type: integer
  ciudadOrigenParam:
    in: query
    name: origen
    required: true
    description: Ciudad en donde desea buscar el viaje
    type: string
  ciudadDestinoParam:
    in: query
    name: destino
    required: true
    description: Ciudad a la que desea que el viaje llegue o pase por
    type: string
  fechaMinimaParam:
    in: query
    name: fechaminima
    required: true
    description: Fecha minima que tendran los viajes retornados
    type: string
    format: date-time
  fechaMaximaParam:
    in: query
    name: fechamaxima
    required: true
    description: Fecha maxima que tendran los viajes retornados
    type: string
    format: date-time
  byNameParam:
    name: byname
    in: query
    required: false
    description: true si se desea buscar por nombre del usuario, false si desdea buscar por el nombre de la cuenta del usuario
    type: boolean
    default: false
  conductorParam:
    name: conductor
    in: path
    required: true
    description: Nombre de la cuenta o del conductor de quien se quieren consultar los datos
    type: string
  pasajeroParam:
    name: pasajero
    in: path
    required: true
    description: Nombre de la cuenta o del pasajero de quien se quieren consultar los datos
    type: string     
  conductorUsernameParam:
    name: conductor
    in: path
    required: true
    description: Nombre de la cuenta del conductor al que se desea acceder
    type: string
  pasajeroUsernameParam:
    name: pasajero
    in: path
    required: true
    description: Nombre de la cuenta del pasajero al que se desea acceder
    type: string
  viajeIdParam:
    name: viajeID
    in: path
    required: true
    description: id del viaje al que se desea acceder
    type: integer

definitions:
  pasajeroDTO:
    description: Objeto para transferir los datos de un pasajero
    properties:
      nombre:
        description: Nombre del usuario
        type: string
      apellido: 
        description: Apellidos del usuario
        type: string
      username: 
        description: Nombre de la cuenta del usuario
        type: string
      mail: 
        description: Correo electronico del usuario
        type: string
      rut: 
        description: RUT del usuario
        type: string
      celular:
        description: Numero de celular del usuario
        type: string
  conductorDTO:
    description: Objeto para transferir los datos de un conductor
    allOf:
      - $ref: '#/definitions/pasajeroDTO'
      - properties: 
          fechaLicencia:
            description: Fecha de vencimiento de la licencia? 
            type: string
            format: date-time
          claseLicencia:
            description: Tipo de licencia del conductor
            type: string
          tieneFoto:
            description: True si el conductor ha subido una foto de el, false en caso contrario
            type: boolean
  vehiculoDTO:
    description: Objeto para transferir los datos de un vehiculo
    properties:
      patente:
        description: Patente del vehiculo
        type: string
      marca:
        description: Marca del vehiculo
        type: string
      modelo:
        description: Modelo del vehiculo
        type: string
      aptoSillaBebe:
        type: boolean 
        description: true si el vehiculo tiene soporte para sillas de bebe
      dosPasajerosAtras:
        type: boolean
        description: true si en el vehiculo solo se llevaran 2 pasajeros atras como maximo
      capacidadEquipaje:
        type: integer
        description: Cantidad maxima de maletas que soporta el vehiculo
      numeroPlazas:
        type: integer
        description: Cantidad de asientes que tiene el vehiculo
      conductor:
        type: string
        description: Nombre de la cuenta del due√±o del vehiculo
  viajeDTO:
    description: Describe tanto un viaje de la base de datos o un trayecto entre paradas de algun viaje
    properties:
      id:
        type: integer
        description: Identificador unico del viaje
      origen: 
        type: string
        description: Ciudad de origen del viaje
      destino:
        type: string
        description: Ciudade de destino del viaje
      fecha: 
        type: string
        format: date-time
        description: Fecha de inicio del viaje
      equipajeMaximo: 
        type: integer
        description: Maximo de maletas que soporta el vehiculo
      vehiculo:
        $ref: '#/definitions/vehiculoDTO'
        description: Vehiculo en el que se viajara
  reservaDTO:
    properties:
      id:
        type: integer
        description: identificador unico de la reserva
      pasajero:
        type: string
        description: Nombre de la cuenta del pasajero
      idViaje:
        type: integer
        description: id del viaje al que se le hizo la reserva
      origen:
        type: string
        description: Ciudad en donde el pasajero se subira al viaje
      destino:
        type: string
        description: Ciudad en donde se bajara el pasajero
      estado: 
        type: integer
        description: estado en el que se encuentra la solicitud de la reserva
